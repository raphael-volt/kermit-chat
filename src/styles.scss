// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import "~@angular/material/theming";
//@import "../node_modules/@angular/material/theming";
@import "theme-variables.scss";
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

@mixin list-item-active($theme) {
  $accent: map-get($theme, accent);

  .list-item-active {
    background: mat-color($accent);
    color     : mat-color($accent, default-contrast);

    &:hover,
    &:focus {
      background: mat-color($accent) !important;
      color     : mat-color($accent, default-contrast) !important;
    }
  }

}

@mixin content-color($palette) {
  background: mat-color($palette);
  color     : mat-color($palette, text);
}

@mixin dark($theme) {
  $primary   : map-get($theme, primary);
  $accent    : map-get($theme, accent);
  $warn      : map-get($theme, warn);
  $background: map-get($theme, background);
  $foreground: map-get($theme, foreground);

  .dark {
    box-sizing: border-box;

    background-color: mat-color($background, background);
    color           : mat-color($foreground, text);

    @include mat-list-theme($theme);

    .mat-list-base {
      padding-top   : 0px;
      padding-bottom: 0px;
    }

    @include list-item-active($theme)
  }
}

@mixin border-divider($theme) {
  border-width: 1px;
  border-style: solid;
  ;
  border-color: mat-color(map-get($theme, foreground), divider);
}

@mixin avatar-theme($theme) {
  $foreground   : map-get($theme, foreground);
  $background   : map-get($theme, background);
  $divider-color: mat-color($foreground, divider);

  .avatar-list .avatar-renderer {
    box-shadow: none;

    &.elevation {
      @include _mat-theme-elevation(1, $theme);
    }

    border-width: 1px;
    border-style: solid;
    border-color: mat-color($foreground, divider);

    color     : mat-color($foreground, hint-text);
    background: mat-color($background, card);

    &.focus-overlay {
      background-color: mat-color($background, focused-button);
    }

    &.toggle-hovered {
      background: mat-color($background, hover); //, 0.12);
    }

    &.toggle-checked {
      background-color: mat-color($background, selected-button);
      color           : mat-color($foreground, secondary-text);
    }
  }
}

$dark-theme: mat-dark-theme($app-primary, $app-accent, $app-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($app-theme);
@include list-item-active($app-theme);
@include avatar-theme($app-theme);

@include dark($dark-theme);

.mat-border {
  @include border-divider($app-theme)
}

$ctn-padding: 16px;

html,
body {
  height  : 100vh;
  width   : 100vw;
  margin  : 0;
  padding : 0;
  overflow: hidden;
}

body {
  position: relative;
}

.app-main {
  position       : absolute;
  left           : 0;
  right          : 0;
  top            : 0;
  bottom         : 0;
  overflow       : hidden;
  display        : flex;
  flex-direction : column;
  flex-wrap      : nowrap;
  justify-content: flex-start;
  align-content  : flex-start;
  align-items    : stretch;
}

.nav-main {
  order     : 0;
  flex      : 0 1 auto;
  align-self: auto;
}

.app-scroller {
  order         : 0;
  flex          : 1 1 auto;
  align-self    : auto;
  overflow      : hidden;
  display       : flex;
  flex-direction: column;

  >.main-view {
    flex           : 1 1 auto;
    display        : flex;
    flex-direction : column;
    flex-wrap      : nowrap;
    justify-content: stretch;
    align-items    : stretch;
    padding        : 0;
    overflow       : hidden;

    .flex-scroller {
      overflow-y     : hidden;
      overflow-y     : auto;
      display        : flex;
      flex-direction : column;
      flex-wrap      : nowrap;
      justify-content: flex-start;
      align-items    : stretch;
    }

    .align-items-center {
      align-items: center
    }
  }
}

.dialog-container-transparent {
  background: none;

  .mat-dialog-container {
    display      : block;
    padding      : 0;
    border-radius: 0;
    box-sizing   : border-box;
    overflow     : hidden;
    outline      : 0;
    width        : 100%;
    height       : 100%;
    min-height   : inherit;
    max-height   : inherit;
    box-shadow   : none;
    background   : none;
    color        : rgba(0, 0, 0, 0.87);
  }
}

* {
  box-sizing: border-box;
}

.flex-row {
  display       : flex;
  flex-direction: row;
}

.flex-column {
  display       : flex;
  flex-direction: column;
}

@mixin fx-box($dir, $wrap: nowrap) {
  display       : flex;
  flex-direction: $dir;
  overflow      : hidden;
  flex-wrap     : $wrap;
}

// flex: flex-grow flex-shrink flex-basis|auto|initial|inherit;
@mixin fx-item($grow: 0, $shrink: 1, $basis: auto, $order: 0) {
  flex-grow  : $grow;
  flex-shrink: $shrink;
  flex-basis : $basis;
  order      : $order;
}

@mixin fx-box-item($grow: 0, $shrink: 1, $basis: auto, $order: 0) {
  >* {
    @include fx-item($grow, $shrink, $basis, $order);
  }
}

@mixin fx-gap($gap, $dir: bottom) {
  >* {
    $key  : margin-#{$dir};
    $value: $gap+px;

    #{$key}: $value;

    &:last-child {
      #{$key}: $value;
    }
  }
}

@mixin flex-card-theme($theme) {
  $background: map-get($theme, background);
  $foreground: map-get($theme, foreground);

  @include _mat-theme-overridable-elevation(1, $theme);
  background: mat-color($background, card);
  color     : mat-color($foreground, text);
}

.nav-list-column {
  @include flex-card-theme($app-theme);
  @include fx-item(1 1);
  @include fx-box(column);
  align-items    : stretch;
  justify-content: stretch;
  margin         : $ctn-padding;
  margin-right   : 0;
}


.v-scroller {
  flex          : 0 1 auto;
  display       : flex;
  flex-direction: column;
  overflow-x    : hidden;
  overflow-y    : auto;
}

.align-content-stretch {
  align-content: stretch;
}

.flex-fill {
  flex          : 1 1 auto;
  display       : flex;
  flex-direction: column;
  overflow      : hidden;
}

.flex01 {
  overflow: hidden;
  flex    : 0 1 auto;
}

.flex11 {
  overflow: hidden;
  flex    : 1 1 auto;
}

.flex10 {
  overflow: hidden;
  flex    : 1 0 auto;
}

.flex00 {
  overflow: hidden;
  flex    : 0 0 auto;
}

div {
  max-width: unset;
}

.row-spacer {
  flex: 1 1 auto;
}

.pad-16 {
  padding: 0; //$ctn-padding;
}

mat-card.nav-card {
  flex          : 1 1 auto;
  display       : flex;
  overflow      : hidden;
  flex-direction: column;

  >mat-card-content {
    flex          : 1 1 auto;
    display       : flex;
    flex-direction: column;
    overflow-x    : hidden;
    overflow-y    : auto;
    flex-wrap     : nowrap;
  }

  &.margin-right0 {
    margin-right: 0;
  }

}

mat-card.thread-card {
  padding-left  : 0;
  padding-right : 0;
  padding-top   : $ctn-padding;
  padding-bottom: 0;

  mat-card-header {
    margin-left : $ctn-padding;
    margin-right: $ctn-padding;
  }

  >mat-card-content.divider {
    margin : 0;
    z-index: 999;
  }

  >mat-card-content.thread-scroller {
    padding: $ctn-padding;
  }
}

.nav-card {
  &.flex-card {
    margin: $ctn-padding;

    &.top0 {
      margin-top: 0;
    }
  }
}

.mat-raised-button.flex-row-button {
  margin     : 0;
  margin-left: $ctn-padding;
  margin-top : $ctn-padding;
}

.fx-col {
  @include fx-box(column);

  >.flex01 {
    @include fx-item(0, 1)
  }

  >.flex11 {
    @include fx-item(1, 1)
  }

  >.flex00 {
    @include fx-item(0, 0)
  }

  >.flex10 {
    @include fx-item(1, 0)
  }
}

.v-box {
  @include fx-box(column);

  &.a-i-start {
    align-items: flex-start;
  }

  &.gap4 {
    @include fx-gap(4);
  }

  &.gap8 {
    @include fx-gap(8);
  }

  &.gap12 {
    @include fx-gap(12);
  }

  &.gap16 {
    @include fx-gap(16);
  }

  >.flex01 {
    @include fx-item(0, 1)
  }

  >.flex11 {
    @include fx-item(1, 1)
  }

  >.flex00 {
    @include fx-item(0, 0)
  }

  >.flex10 {
    @include fx-item(1, 0)
  }
}

.h-box {
  @include fx-box(row);

  &.gap4 {
    @include fx-gap(4, right);
  }

  &.gap8 {
    @include fx-gap(8, right);
  }

  &.gap12 {
    @include fx-gap(12, right);
  }

  &.gap16 {
    @include fx-gap(16, right);
  }

  >.flex01 {
    @include fx-item(0, 1)
  }

  >.flex11 {
    @include fx-item(1, 1)
  }

  >.flex00 {
    @include fx-item(0, 0)
  }

  >.flex10 {
    @include fx-item(1, 0)
  }
}

.v-flow {
  @include fx-item(1, 1);
  // @include fx-box(column);
  overflow  : auto;
  overflow-x: hidden;
}

div {
  box-sizing: border-box;
}


$config: mat-typography-config();

@import "./quill.scss";
@include quill-theme(mat-font-family($config));

.thread-panel div.mat-expansion-panel-body {
  padding: 0 !important;
  margin : 0;

  .ql-container.ql-snow {
    border: none !important;
  }

  .ql-toolbar.ql-snow {
    border-left : none !important;
    border-right: none !important;
  }
}